<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bank.dao.ServiceOutletsMapper">
  <resultMap id="BaseResultMap" type="com.bank.bean.ServiceOutlets">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="SerOutAddress" jdbcType="VARCHAR" property="seroutaddress" />
    <result column="SerOutNum" jdbcType="VARCHAR" property="seroutnum" />
    <result column="SerOutDate" jdbcType="VARCHAR" property="seroutdate" />
    <result column="SerOutName" jdbcType="VARCHAR" property="seroutname" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, SerOutAddress, SerOutNum, SerOutDate, SerOutName
  </sql>
  <select id="selectByExample" parameterType="com.bank.bean.ServiceOutletsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from serviceoutlets
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from serviceoutlets
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from serviceoutlets
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bank.bean.ServiceOutletsExample">
    delete from serviceoutlets
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bank.bean.ServiceOutlets">
    insert into serviceoutlets (id, SerOutAddress, SerOutNum, 
      SerOutDate, SerOutName)
    values (#{id,jdbcType=INTEGER}, #{seroutaddress,jdbcType=VARCHAR}, #{seroutnum,jdbcType=VARCHAR}, 
      #{seroutdate,jdbcType=VARCHAR}, #{seroutname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bank.bean.ServiceOutlets">
    insert into serviceoutlets
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="seroutaddress != null">
        SerOutAddress,
      </if>
      <if test="seroutnum != null">
        SerOutNum,
      </if>
      <if test="seroutdate != null">
        SerOutDate,
      </if>
      <if test="seroutname != null">
        SerOutName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="seroutaddress != null">
        #{seroutaddress,jdbcType=VARCHAR},
      </if>
      <if test="seroutnum != null">
        #{seroutnum,jdbcType=VARCHAR},
      </if>
      <if test="seroutdate != null">
        #{seroutdate,jdbcType=VARCHAR},
      </if>
      <if test="seroutname != null">
        #{seroutname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bank.bean.ServiceOutletsExample" resultType="java.lang.Long">
    select count(*) from serviceoutlets
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update serviceoutlets
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.seroutaddress != null">
        SerOutAddress = #{record.seroutaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.seroutnum != null">
        SerOutNum = #{record.seroutnum,jdbcType=VARCHAR},
      </if>
      <if test="record.seroutdate != null">
        SerOutDate = #{record.seroutdate,jdbcType=VARCHAR},
      </if>
      <if test="record.seroutname != null">
        SerOutName = #{record.seroutname,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update serviceoutlets
    set id = #{record.id,jdbcType=INTEGER},
      SerOutAddress = #{record.seroutaddress,jdbcType=VARCHAR},
      SerOutNum = #{record.seroutnum,jdbcType=VARCHAR},
      SerOutDate = #{record.seroutdate,jdbcType=VARCHAR},
      SerOutName = #{record.seroutname,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bank.bean.ServiceOutlets">
    update serviceoutlets
    <set>
      <if test="seroutaddress != null">
        SerOutAddress = #{seroutaddress,jdbcType=VARCHAR},
      </if>
      <if test="seroutnum != null">
        SerOutNum = #{seroutnum,jdbcType=VARCHAR},
      </if>
      <if test="seroutdate != null">
        SerOutDate = #{seroutdate,jdbcType=VARCHAR},
      </if>
      <if test="seroutname != null">
        SerOutName = #{seroutname,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bank.bean.ServiceOutlets">
    update serviceoutlets
    set SerOutAddress = #{seroutaddress,jdbcType=VARCHAR},
      SerOutNum = #{seroutnum,jdbcType=VARCHAR},
      SerOutDate = #{seroutdate,jdbcType=VARCHAR},
      SerOutName = #{seroutname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>